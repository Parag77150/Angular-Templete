{"version":3,"file":"angular-web-worker.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://angular-web-worker/lib/web-worker-decorator.ts","ng://angular-web-worker/lib/worker-controller.ts","ng://angular-web-worker/lib/bootstrap-worker.ts","ng://angular-web-worker/lib/callable-decorator.ts","ng://angular-web-worker/lib/accessable-decorator.ts","ng://angular-web-worker/lib/subscribable-decorator.ts","ng://angular-web-worker/lib/shallow-transfer-decorator.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { WorkerUtils, WorkerConfig, WorkerAnnotations, AccessableMetaData, SecretResult, WorkerEvents, SubscribableMetaData } from 'angular-web-worker/common';\r\n\r\n/*\r\n* Collection of factory functions for the factory as attached to a single object which allows for testing of imported function\r\n*/\r\nexport interface WorkerFactoryFunctionsDict {\r\n    /*\r\n    * Attaches a worker configuration to an instance of a worker class\r\n    * @param instance instance of the worker class\r\n    * @param config configuration\r\n    */\r\n    setWorkerConfig: (instance: any, config: WorkerConfig) => void;\r\n    /*\r\n    * Adds a get wrapper to all properties decorated with `@Accessable()` which returns a `SecretResult` if the class instance is a client, otherwise it will use the default behaviour\r\n    * @param instance instance of the worker class\r\n    */\r\n    configureAccessables: (instance: any) => void;\r\n    /**\r\n     * Adds a get wrapper to all properties decorated with `@Subscribable()` which returns a `SecretResult` if the class instance is a client, otherwise it will use the default behaviour\r\n     * @param instance instance of the worker class\r\n     */\r\n    configureSubscribables: (instance: any) => void;\r\n}\r\n\r\nexport const WorkerFactoryFunctions: WorkerFactoryFunctionsDict = {\r\n    /*\r\n     * Attaches a worker configuration to an instance of a worker class\r\n     * @param instance instance of the worker class\r\n     * @param config configuration\r\n     */\r\n    setWorkerConfig: (instance: any, config: WorkerConfig) => {\r\n        Object.defineProperty(instance, WorkerAnnotations.Config, {\r\n            get: function () {\r\n                return config;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    },\r\n\r\n    configureAccessables: (instance: any) => {\r\n        const accessables: AccessableMetaData[] = WorkerUtils.getAnnotation(instance.__proto__.constructor, WorkerAnnotations.Accessables, []);\r\n\r\n        if (accessables) {\r\n            accessables.forEach((item) => {\r\n                let _val = instance[item.name];\r\n                const getter = function () {\r\n                    const config: WorkerConfig = this.__worker_config__;\r\n                    if (config) {\r\n                        if (config.isClient) {\r\n                            const secret: SecretResult<WorkerEvents.Accessable> = {\r\n                                clientSecret: config.clientSecret,\r\n                                type: WorkerEvents.Accessable,\r\n                                propertyName: item.name,\r\n                                body: {\r\n                                    get: item.get,\r\n                                    set: item.set\r\n                                }\r\n                            };\r\n                            return secret;\r\n                        } else {\r\n                            return _val;\r\n                        }\r\n                    } else {\r\n                        return _val;\r\n                    }\r\n                };\r\n\r\n                const setter = newVal => {\r\n                    _val = newVal;\r\n                };\r\n\r\n                delete instance[item.name];\r\n                Object.defineProperty(instance, item.name, {\r\n                    get: getter,\r\n                    set: setter,\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    configureSubscribables: (instance: any) => {\r\n\r\n        const observables = WorkerUtils.getAnnotation<SubscribableMetaData[]>(instance.__proto__.constructor, WorkerAnnotations.Observables, []);\r\n\r\n        if (observables) {\r\n            observables.forEach((item) => {\r\n                let _val = instance[item.name];\r\n\r\n                const getter = function () {\r\n                    const config: WorkerConfig = this.__worker_config__;\r\n                    if (config) {\r\n                        if (config.isClient) {\r\n                            const secret: SecretResult<WorkerEvents.Observable> = {\r\n                                clientSecret: config.clientSecret,\r\n                                type: WorkerEvents.Observable,\r\n                                propertyName: item.name,\r\n                                body: null\r\n                            };\r\n                            return secret;\r\n                        } else {\r\n                            return _val;\r\n                        }\r\n                    } else {\r\n                        return _val;\r\n                    }\r\n                };\r\n\r\n                const setter = newVal => {\r\n                    _val = newVal;\r\n                };\r\n\r\n                delete instance[item.name];\r\n                Object.defineProperty(instance, item.name, {\r\n                    get: getter,\r\n                    set: setter,\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Class decorator allowing the class to be bootstrapped into a web worker script, and allowing communication with a `WorkerClient`\r\n */\r\nexport function AngularWebWorker() {\r\n\r\n    return function (target: any) {\r\n        WorkerUtils.setAnnotation(target, WorkerAnnotations.IsWorker, true);\r\n        WorkerUtils.setAnnotation(target, WorkerAnnotations.Factory, function create(config: WorkerConfig) {\r\n            const instance = new target();\r\n            WorkerFactoryFunctions.setWorkerConfig(instance, config);\r\n            WorkerFactoryFunctions.configureAccessables(instance);\r\n            WorkerFactoryFunctions.configureSubscribables(instance);\r\n            return instance;\r\n        });\r\n\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    WebWorkerType, WorkerRequestEvent, WorkerEvent, WorkerEvents, WorkerAnnotations,\r\n    WorkerUtils, WorkerResponseEvent, ShallowTransferParamMetaData,\r\n    AccessableMetaData, WorkerObservableMessage, WorkerObservableMessageTypes, CallableMetaData, WorkerMessageBus\r\n} from 'angular-web-worker/common';\r\n\r\n/**\r\n * Handles communication to and from a `WorkerClient` and triggers work with the worker class.\r\n */\r\nexport class WorkerController<T> {\r\n\r\n    /**\r\n     * Instance of the worker class\r\n     */\r\n    private worker: any;\r\n    /**\r\n     * Dictionary of subscriptions to RxJS subjects within the worker\r\n     */\r\n    private subscriptions: { [id: string]: Subscription };\r\n\r\n    /**\r\n     * Creates a new `WorkerController`\r\n     * @param workerClass the worker class,\r\n     * @param postMessageFn the worker postMessage function passed into constuctor allowing this to be mocked when running within the app (not the worker script)\r\n     * @param onMessageFn the worker onmessage event function passed into constructor allowing this to be mocked when running within the app (not the worker script)\r\n     */\r\n    constructor(private workerClass: WebWorkerType<any>, private messageBus: WorkerMessageBus) {\r\n        try {\r\n            this.worker = WorkerUtils.getAnnotation<Function>(workerClass, WorkerAnnotations.Factory)({\r\n                isClient: false\r\n            });\r\n            this.subscriptions = {};\r\n            this.registerEvents();\r\n        } catch (e) { }\r\n    }\r\n\r\n    /**\r\n     * Returns instance of worker class\r\n     */\r\n    get workerInstance(): T {\r\n        return this.worker;\r\n    }\r\n\r\n    /**\r\n     * Creates the event listeners to correctly handle and respond to messages recieved from a `WorkerClient`\r\n     */\r\n    private registerEvents() {\r\n        this.messageBus.onmessage = (ev: WorkerEvent<WorkerRequestEvent<any>>) => {\r\n            switch (ev.data.type) {\r\n                case WorkerEvents.Callable:\r\n                    this.handleCallable(ev.data);\r\n                    break;\r\n                case WorkerEvents.Accessable:\r\n                    this.handleAccessable(ev.data);\r\n                    break;\r\n                case WorkerEvents.Observable:\r\n                    this.handleSubscription(ev.data);\r\n                    break;\r\n                case WorkerEvents.Init:\r\n                    this.handleInit(ev.data);\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * A utility function to create a new `WorkerResponseEvent` from the details provided by the `WorkerRequestEvent`, as well as the result to be returned\r\n     * @param type The type of worker event\r\n     * @param request The request that the response relates to\r\n     * @param result data to return with the response\r\n     */\r\n    private response<EventType extends number>(\r\n        type: EventType,\r\n        request: WorkerRequestEvent<EventType>,\r\n        result: any\r\n    ): WorkerResponseEvent<EventType> {\r\n        return {\r\n            type: type,\r\n            isError: false,\r\n            requestSecret: request.requestSecret,\r\n            propertyName: request.propertyName,\r\n            result: result\r\n        };\r\n    }\r\n\r\n    /**\r\n     * A utility function to create a new error in the form of a `WorkerResponseEvent` from the details provided by the `WorkerRequestEvent`, as well as the error to be returned\r\n     * @param type The type of worker event\r\n     * @param request The request that the error relates to\r\n     * @param result the error to be returned\r\n     */\r\n    private error<EventType extends number>(\r\n        type: number,\r\n        request: WorkerRequestEvent<EventType>,\r\n        error: any\r\n    ): WorkerResponseEvent<EventType> {\r\n        return {\r\n            type: type,\r\n            isError: true,\r\n            requestSecret: request.requestSecret,\r\n            propertyName: request.propertyName,\r\n            error: JSON.stringify(error, this.replaceErrors),\r\n            result: null\r\n        };\r\n    }\r\n\r\n    /**\r\n     * A utility function as the replacer for the `JSON.stringify()` function to make the native browser `Error` class serializable to JSON\r\n     */\r\n    private replaceErrors(key: string, value: any) {\r\n        if (value instanceof Error) {\r\n            const error = {};\r\n            // tslint:disable-next-line: no-shadowed-variable\r\n            Object.getOwnPropertyNames(value).forEach(function (key) {\r\n                error[key] = value[key];\r\n            });\r\n            return error;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Handles `WorkerEvents.Init` requests from a client by calling the `onWorkerInit` hook if implemented and only responding once the hook has been completed, regardless of whether it is\r\n     * async or not\r\n     * @param request request recieved from the `WorkerClient`\r\n     */\r\n    async handleInit(request: WorkerRequestEvent<WorkerEvents.Init>) {\r\n        if (this.worker['onWorkerInit']) {\r\n            try {\r\n                const result = this.worker['onWorkerInit']();\r\n                let isPromise = false;\r\n                if (result) {\r\n                    isPromise = result.__proto__.constructor === Promise;\r\n                }\r\n                if (isPromise) {\r\n                    result.then(() => {\r\n                        this.postMessage(this.response(WorkerEvents.Init, request, null));\r\n                    }).catch((err: any) => {\r\n                        this.postMessage(this.error(WorkerEvents.Init, request, err));\r\n                    });\r\n                } else {\r\n                    this.postMessage(this.response(WorkerEvents.Init, request, null));\r\n                }\r\n            } catch (e) {\r\n                this.postMessage(this.error(WorkerEvents.Init, request, null));\r\n            }\r\n        } else {\r\n            this.postMessage(this.response(WorkerEvents.Init, request, null));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles `WorkerEvents.Callable` requests from a client by calling the targeted method and responding with the method's return value\r\n     * @param request request recieved from the `WorkerClient`\r\n     */\r\n    async handleCallable(request: WorkerRequestEvent<WorkerEvents.Callable>) {\r\n        let response: WorkerResponseEvent<any>;\r\n        try {\r\n            request.body.arguments = this.applyShallowTransferToCallableArgs(request, request.body.arguments);\r\n            const result = await this.worker[request.propertyName](...request.body.arguments);\r\n\r\n            response = this.response(WorkerEvents.Callable, request, result);\r\n        } catch (e) {\r\n            response = this.error(WorkerEvents.Callable, request, e);\r\n        } finally {\r\n            this.postMessage(response);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Transfers the prototype of any function arguments decorated with `@ShallowTransfer()` which have been serialized and recieved from a `WorkerEvents.Callable` request.\r\n     *  This occurs before the arguments are used to call the worker function.\r\n     * @param request request recieved from the `WorkerClient`\r\n     * @param args array of function arguments\r\n     */\r\n    applyShallowTransferToCallableArgs(\r\n        request: WorkerRequestEvent<WorkerEvents.Callable>,\r\n        args: any[]\r\n    ): any[] {\r\n\r\n        const metaData = WorkerUtils.getAnnotation<ShallowTransferParamMetaData[]>(this.workerClass, WorkerAnnotations.ShallowTransferArgs, []);\r\n\r\n        if (metaData) {\r\n            const shallowTransferMeta = metaData.filter(x => x.name === request.propertyName);\r\n            for (let i = 0; i < args.length; i++) {\r\n                const meta = shallowTransferMeta.filter(x => x.argIndex === i)[0];\r\n                if (meta) {\r\n                    if (meta.type && args[i]) {\r\n                        args[i].__proto__ = meta.type.prototype;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return args;\r\n    }\r\n\r\n    /**\r\n     * Handles `WorkerEvents.Accessable` requests from a client by either setting the target property of the worker or responding with the target property's value\r\n     * @param request request recieved from the `WorkerClient`\r\n     */\r\n    handleAccessable(request: WorkerRequestEvent<WorkerEvents.Accessable>) {\r\n        let response: WorkerResponseEvent<any>;\r\n        try {\r\n            const metaData = WorkerUtils.getAnnotation<AccessableMetaData[]>(this.workerClass, 'accessables', []).filter(x => x.name === request.propertyName)[0];\r\n            if (request.body.isGet) {\r\n                response = this.response(WorkerEvents.Accessable, request, this.worker[request.propertyName]);\r\n            } else {\r\n                this.worker[request.propertyName] = request.body.value;\r\n                if (metaData.shallowTransfer) {\r\n                    if (metaData.type && this.worker[request.propertyName]) {\r\n                        this.worker[request.propertyName].__proto__ = metaData.type.prototype;\r\n                    }\r\n                }\r\n                response = this.response(WorkerEvents.Accessable, request, null);\r\n            }\r\n        } catch (e) {\r\n            response = this.error(WorkerEvents.Accessable, request, e);\r\n        } finally {\r\n            this.postMessage(response);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles `WorkerEvents.Subscribable` requests from a client by creating a new subscription to the targeted observable which will send messages to the client each time\r\n     * an event is triggered by the observable. The function may also unsubscribe from a subscription depending on the details of the request\r\n     * @param request request recieved from the `WorkerClient`\r\n     */\r\n    handleSubscription(request: WorkerRequestEvent<WorkerEvents.Observable>) {\r\n        let response: WorkerResponseEvent<WorkerEvents.Observable>;\r\n\r\n        if (!request.body.isUnsubscribe) {\r\n            try {\r\n                this.createSubscription(request);\r\n                response = this.response(WorkerEvents.Observable, request, request.body.subscriptionKey);\r\n            } catch (e) {\r\n                this.removeSubscription(request.body.subscriptionKey);\r\n                response = this.error(WorkerEvents.Observable, request, e);\r\n            } finally {\r\n                this.postMessage(response);\r\n            }\r\n        } else {\r\n            try {\r\n                this.removeSubscription(request.body.subscriptionKey);\r\n                response = this.response(WorkerEvents.Observable, request, null);\r\n            } catch (e) {\r\n                response = this.error(WorkerEvents.Observable, request, e);\r\n            } finally {\r\n                this.postMessage(response);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new subscription to a worker observable and adds it to the `subscriptions` dictionary. The subscriptions will send messages to the client each time\r\n     *  and event is triggered by the observable\r\n     * @param request request recieved from the `WorkerClient`\r\n     */\r\n    createSubscription(request: WorkerRequestEvent<WorkerEvents.Observable>): void {\r\n\r\n        this.removeSubscription(request.body.subscriptionKey);\r\n\r\n        this.subscriptions[request.body.subscriptionKey] = (<Subject<any>>this.worker[request.propertyName]).subscribe(\r\n            (val) => {\r\n                const response: WorkerResponseEvent<WorkerObservableMessage> = {\r\n                    type: WorkerEvents.ObservableMessage,\r\n                    propertyName: request.propertyName,\r\n                    isError: false,\r\n                    requestSecret: null,\r\n                    result: {\r\n                        key: request.body.subscriptionKey,\r\n                        type: WorkerObservableMessageTypes.Next,\r\n                        value: val\r\n                    }\r\n                };\r\n                this.postSubscriptionMessage(response);\r\n            }, err => {\r\n                const response: WorkerResponseEvent<WorkerObservableMessage> = {\r\n                    type: WorkerEvents.ObservableMessage,\r\n                    propertyName: request.propertyName,\r\n                    isError: true,\r\n                    requestSecret: null,\r\n                    result: {\r\n                        key: request.body.subscriptionKey,\r\n                        type: WorkerObservableMessageTypes.Error,\r\n                        error: JSON.parse(JSON.stringify(err, this.replaceErrors))\r\n                    }\r\n                };\r\n                this.postSubscriptionMessage(response);\r\n            }, () => {\r\n                const response: WorkerResponseEvent<WorkerObservableMessage> = {\r\n                    type: WorkerEvents.ObservableMessage,\r\n                    propertyName: request.propertyName,\r\n                    isError: false,\r\n                    requestSecret: null,\r\n                    result: {\r\n                        key: request.body.subscriptionKey,\r\n                        type: WorkerObservableMessageTypes.Complete,\r\n                    }\r\n                };\r\n                this.postSubscriptionMessage(response);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Removes a subscription from the `subscriptions` dictionary, unsubscribing before it is deleted\r\n     * @param subscriptionKey key in dictionary\r\n     */\r\n    removeSubscription(subscriptionKey: string) {\r\n        if (this.subscriptions[subscriptionKey]) {\r\n            this.subscriptions[subscriptionKey].unsubscribe();\r\n        }\r\n        delete this.subscriptions[subscriptionKey];\r\n    }\r\n\r\n    /**\r\n     * Unsubscribes from all subscriptions\r\n     */\r\n    removeAllSubscriptions(): void {\r\n        for (const key in this.subscriptions) {\r\n            if (this.subscriptions[key]) {\r\n                this.subscriptions[key].unsubscribe();\r\n                delete this.subscriptions[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A wrapper function around the `postMessage()` method allowing serialization errors to be caught and sent to the client as a `WorkerResponseEvent`.\r\n     * Only used when the response is triggered by a request, which is not the case when the event type is `WorkerEvents.ObservableMessage`.\r\n     * @param response reponse to send to the client\r\n     */\r\n    postMessage<EventType extends number>(\r\n        response: WorkerResponseEvent<EventType>,\r\n    ): void {\r\n        try {\r\n            this.messageBus.postMessage(response);\r\n        } catch (e) {\r\n            const errorResponse: WorkerResponseEvent<EventType> = {\r\n                type: response.type,\r\n                isError: true,\r\n                requestSecret: response.requestSecret,\r\n                propertyName: response.propertyName,\r\n                error: JSON.parse(JSON.stringify(new Error('Unable to serialize response from worker to client'), this.replaceErrors)),\r\n                result: null\r\n            };\r\n            this.messageBus.postMessage(errorResponse);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A wrapper function around the `postMessage()` method allowing serialization errors to be caught and sent to the client as a `WorkerResponseEvent`.\r\n     * Only used when the response type is `WorkerEvents.ObservableMessage` which requires a different implementation to the `WorkerController.postMessage` wrapper as it\r\n     * is one-way communication which is not triggered by a request\r\n     */\r\n    postSubscriptionMessage(\r\n        response: WorkerResponseEvent<WorkerObservableMessage>,\r\n    ): void {\r\n        try {\r\n            this.messageBus.postMessage(response);\r\n        } catch (e) {\r\n            const errorResponse: WorkerResponseEvent<WorkerObservableMessage> = {\r\n                type: response.type,\r\n                isError: true,\r\n                requestSecret: response.requestSecret,\r\n                propertyName: response.propertyName,\r\n                result: {\r\n                    key: response.result.key,\r\n                    type: WorkerObservableMessageTypes.Error,\r\n                    error: JSON.parse(JSON.stringify(new Error('Unable to serialize subscribable response from worker to client'), this.replaceErrors))\r\n                },\r\n            };\r\n            this.messageBus.postMessage(errorResponse);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport { WorkerController } from './worker-controller';\r\nimport { WebWorkerType, WorkerMessageBus } from 'angular-web-worker/common';\r\n\r\n/**\r\n * Bootstraps the worker class when a new worker script is created in the browser. The class must be decorated with `@AngularWebWorker()`\r\n * @param worker worker class to bootstrap\r\n */\r\nexport function bootstrapWorker<T>(worker: WebWorkerType<T>) {\r\n\r\n    const messageBus: WorkerMessageBus = {\r\n        onmessage: (ev: MessageEvent) => {\r\n        },\r\n        postMessage: (msg: Response) => {\r\n            (postMessage as Function)(msg);\r\n        }\r\n    };\r\n    const workerController = new WorkerController<T>(worker, messageBus);\r\n\r\n    onmessage = (ev: MessageEvent) => {\r\n        messageBus.onmessage(ev);\r\n    };\r\n}\r\n","import 'reflect-metadata';\r\nimport { CallableMetaData, WorkerConfig, WorkerEvents, SecretResult, WorkerUtils, WorkerAnnotations } from 'angular-web-worker/common';\r\n\r\n/**\r\n * Configurable options for the `@Callable()` decorator, defining how the decorated method is called from a `WorkerClient`.\r\n */\r\nexport interface CallableOpts {\r\n    /**\r\n     * Whether the prototype of the value returned by the decorated method is transfered after it has been serialized and unserialized when brought back to the `WorkerClient`\r\n     * @defaultvalue false\r\n     * @Experimental has limitations\r\n     */\r\n    shallowTransfer?: boolean;\r\n}\r\n\r\n/**\r\n * Allows the decorated worker method to be called, and its value returned, from the `WorkerClient.call()` method.\r\n * Can be used on both asynchronous and synchronous methods.\r\n * @Serialized Functions will not be copied and circular referencing structures will cause errors. This applies to both the function arguments and the value returned by the function\r\n * @param options Configurable options defining how the decorated method is called from a `WorkerClient`\r\n */\r\nexport function Callable(options?: CallableOpts) {\r\n\r\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n\r\n        const opts = { shallowTransfer: false };\r\n        if (options) {\r\n            opts.shallowTransfer = options.shallowTransfer ? true : false;\r\n        }\r\n\r\n        WorkerUtils.pushAnnotation(target.constructor, WorkerAnnotations.Callables, <CallableMetaData>{\r\n            name: propertyKey,\r\n            shallowTransfer: opts.shallowTransfer,\r\n            returnType: Reflect.getMetadata('design:returntype', target, propertyKey)\r\n        });\r\n\r\n        const originalMethod = descriptor.value;\r\n        descriptor.value = function () {\r\n            const context = this;\r\n            const args = Array.prototype.slice.call(arguments);\r\n            const config: WorkerConfig = context.__worker_config__;\r\n            if (config) {\r\n                if (config.isClient) {\r\n                    const secret: SecretResult<WorkerEvents.Callable> = {\r\n                        clientSecret: context.__worker_config__.clientSecret,\r\n                        type: WorkerEvents.Callable,\r\n                        propertyName: propertyKey,\r\n                        body: {\r\n                            args: args\r\n                        }\r\n                    };\r\n                    return secret;\r\n                } else {\r\n                    return originalMethod.call(context, ...args);\r\n                }\r\n            } else {\r\n                return originalMethod.call(context, ...args);\r\n            }\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\n","import { WorkerUtils, AccessableMetaData, WorkerAnnotations } from 'angular-web-worker/common';\r\nimport 'reflect-metadata';\r\n\r\n/**\r\n * Configurable options for the `@Accessable()` decorator, defining how the decorated property can be interacted with from a `WorkerClient`.\r\n */\r\nexport interface AccessableOpts {\r\n    /**\r\n     * Determines whether the decorated property can be retrieved by a `WorkerClient` with its `get()` method\r\n     * @defaultvalue true\r\n     */\r\n    get?: boolean;\r\n    /**\r\n     * Determines whether the decorated property can be set by a `WorkerClient` with its `set()` method\r\n     * @defaultvalue true\r\n     */\r\n    set?: boolean;\r\n    /**\r\n     * Whether the decoratored property's prototype is transfered after it has been serialized and unserialized.\r\n     * @defaultvalue false\r\n     * @Experimental has limitations\r\n     */\r\n    shallowTransfer?: boolean;\r\n}\r\n\r\n/**\r\n * Allows the decorated worker property to be accessed from the `WorkerClient.get()` and `WorkerClient.set()` methods\r\n * @Serialized Functions will not be copied and circular referencing structures will cause errors\r\n * @param options configurable options defining how the decorated property can be interacted with from a `WorkerClient`\r\n */\r\nexport function Accessable(options?: AccessableOpts) {\r\n\r\n    const opts: AccessableOpts = { get: true, set: true, shallowTransfer: false };\r\n    if (options) {\r\n        opts.get = options.get === false ? false : true;\r\n        opts.set = options.set === false ? false : true;\r\n        opts.shallowTransfer = options.shallowTransfer ? true : false;\r\n    }\r\n\r\n    return function (target: any, propertyKey: string) {\r\n        WorkerUtils.pushAnnotation(target.constructor, WorkerAnnotations.Accessables, <AccessableMetaData>{\r\n            name: propertyKey,\r\n            type: Reflect.getMetadata('design:type', target, propertyKey),\r\n            get: opts.get,\r\n            set: opts.set,\r\n            shallowTransfer: opts.shallowTransfer\r\n        });\r\n    };\r\n\r\n}\r\n\r\n","import { WorkerUtils, ObservablesOnly, SubscribableMetaData, WorkerAnnotations, WorkerConfig, SecretResult, WorkerEvents } from 'angular-web-worker/common';\r\nimport 'reflect-metadata';\r\n\r\n/**\r\n * Allows the decorated worker property to be subscribed to, or observed through the `WorkerClient.subscribe()` and `WorkerClient.observe()` methods.\r\n *\r\n * Can only be used on multicasted RxJS observables being a `Subject`,  `BehaviorSubject`, `ReplaySubject` or `AsyncSubject`.\r\n * @Serialized When data is transferred through `Subject.next()`, functions will not be copied and circular referencing structures will cause errors\r\n */\r\nexport function Subscribable() {\r\n    return function <T, Tkey extends keyof ObservablesOnly<T>>(target: T, propertyKey: Tkey) {\r\n        WorkerUtils.pushAnnotation(target.constructor, WorkerAnnotations.Observables, <SubscribableMetaData>{\r\n            name: propertyKey,\r\n            type: Reflect.getMetadata('design:type', target, <string>propertyKey)\r\n        });\r\n    };\r\n}\r\n","import { WorkerUtils, ShallowTransferParamMetaData, WorkerAnnotations } from 'angular-web-worker/common';\r\n\r\n/**\r\n * Transfers the decorated argument's prototype when it is serialized and unserialized when the method is called from `WorkerClient.call()`. This will only have an effect if\r\n * the method is decorated with `@Callable()`\r\n * @Experimental has limitations\r\n */\r\nexport function ShallowTransfer() {\r\n    return function (target: Object, propertyKey: string | symbol, parameterIndex: number) {\r\n        const argTypes: any[] = Reflect.getMetadata('design:paramtypes', target, propertyKey);\r\n        WorkerUtils.pushAnnotation(target.constructor, WorkerAnnotations.ShallowTransferArgs, <ShallowTransferParamMetaData>{\r\n            name: propertyKey,\r\n            type: argTypes[parameterIndex],\r\n            argIndex: parameterIndex\r\n        });\r\n    };\r\n}\r\n"],"names":["WorkerAnnotations","WorkerUtils","WorkerEvents","WorkerObservableMessageTypes"],"mappings":"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"}