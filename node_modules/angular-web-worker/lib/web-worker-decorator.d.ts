import { WorkerConfig } from 'angular-web-worker/common';
export interface WorkerFactoryFunctionsDict {
    setWorkerConfig: (instance: any, config: WorkerConfig) => void;
    configureAccessables: (instance: any) => void;
    /**
     * Adds a get wrapper to all properties decorated with `@Subscribable()` which returns a `SecretResult` if the class instance is a client, otherwise it will use the default behaviour
     * @param instance instance of the worker class
     */
    configureSubscribables: (instance: any) => void;
}
export declare const WorkerFactoryFunctions: WorkerFactoryFunctionsDict;
/**
 * Class decorator allowing the class to be bootstrapped into a web worker script, and allowing communication with a `WorkerClient`
 */
export declare function AngularWebWorker(): (target: any) => void;
