/**
 * A set of static utility functions for creating and retrieving worker annotations
 */
export declare class WorkerUtils {
    /**
     * Creates or replaces a worker annotation
     * @param cls Class or object that the annotations will be attached to
     * @param propertyKey name of the annotated property
     * @param value the value of the annotation
     */
    static setAnnotation(cls: any, propertyKey: string, value: any): void;
    /**
     * Adds an item to an array for a particular annotation property. If no array exists a new array will be created before the item is added
     * @param cls Class or object that the annotations will be attached to
     * @param propertyKey name of the annotated array
     * @param value the item to add in the array
     */
    static pushAnnotation(cls: any, propertyKey: string, value: any): void;
    /**
     * Returns an annotated worker property. Allows for a generic type argument to specify the return type of the annotation
     * @param cls Class or object that the annotations is attached to
     * @param propertyKey name of the annotated array
     * @param ifUndefined the returned value if the annotated property does not exist
     */
    static getAnnotation<T>(cls: any, propertyKey: string, ifUndefined?: any): T;
}
